// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model12

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block12 - IPv4 - Include to support an IPv4 protocol stack on this interface

const (
	ModelID          = 12
	ModelLabel       = "IPv4"
	ModelDescription = "Include to support an IPv4 protocol stack on this interface"
)

const (
	Addr    = "Addr"
	Cap     = "Cap"
	Cfg     = "Cfg"
	CfgSt   = "CfgSt"
	ChgSt   = "ChgSt"
	Ctl     = "Ctl"
	DNS1    = "DNS1"
	DNS2    = "DNS2"
	DomNam  = "DomNam"
	Gw      = "Gw"
	HostNam = "HostNam"
	Msk     = "Msk"
	NTP1    = "NTP1"
	NTP2    = "NTP2"
	Nam     = "Nam"
	Pad     = "Pad"
)

type Block12 struct {
	Nam     string             `sunspec:"offset=0,len=4,access=rw"`
	CfgSt   sunspec.Enum16     `sunspec:"offset=4"`
	ChgSt   sunspec.Bitfield16 `sunspec:"offset=5"`
	Cap     sunspec.Bitfield16 `sunspec:"offset=6"`
	Cfg     sunspec.Enum16     `sunspec:"offset=7,access=rw"`
	Ctl     sunspec.Enum16     `sunspec:"offset=8,access=rw"`
	Addr    string             `sunspec:"offset=9,len=8,access=rw"`
	Msk     string             `sunspec:"offset=17,len=8,access=rw"`
	Gw      string             `sunspec:"offset=25,len=8,access=rw"`
	DNS1    string             `sunspec:"offset=33,len=8,access=rw"`
	DNS2    string             `sunspec:"offset=41,len=8,access=rw"`
	NTP1    string             `sunspec:"offset=49,len=12,access=rw"`
	NTP2    string             `sunspec:"offset=61,len=12,access=rw"`
	DomNam  string             `sunspec:"offset=73,len=12,access=rw"`
	HostNam string             `sunspec:"offset=85,len=12,access=rw"`
	Pad     sunspec.Pad        `sunspec:"offset=97"`
}

func (self *Block12) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 98,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 98,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Nam, Offset: 0, Type: typelabel.String, Access: "rw", Length: 4, Label: "Name", Description: "Interface name"},
					smdx.PointElement{Id: CfgSt, Offset: 4, Type: typelabel.Enum16, Mandatory: true, Label: "Config Status", Description: "Enumerated value.  Configuration status"},
					smdx.PointElement{Id: ChgSt, Offset: 5, Type: typelabel.Bitfield16, Mandatory: true, Label: "Change Status", Description: "Bitmask value.  A configuration change is pending"},
					smdx.PointElement{Id: Cap, Offset: 6, Type: typelabel.Bitfield16, Mandatory: true, Label: "Config Capability", Description: "Bitmask value. Identify capable sources of configuration"},
					smdx.PointElement{Id: Cfg, Offset: 7, Type: typelabel.Enum16, Access: "rw", Mandatory: true, Label: "IPv4 Config", Description: "Enumerated value.  Configuration method used."},
					smdx.PointElement{Id: Ctl, Offset: 8, Type: typelabel.Enum16, Access: "rw", Mandatory: true, Label: "Control", Description: "Configure use of services"},
					smdx.PointElement{Id: Addr, Offset: 9, Type: typelabel.String, Access: "rw", Length: 8, Mandatory: true, Label: "IP", Description: "IPv4 numeric address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: Msk, Offset: 17, Type: typelabel.String, Access: "rw", Length: 8, Mandatory: true, Label: "Netmask", Description: "IPv4 numeric netmask as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: Gw, Offset: 25, Type: typelabel.String, Access: "rw", Length: 8, Label: "Gateway", Description: "IPv4 numeric gateway address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: DNS1, Offset: 33, Type: typelabel.String, Access: "rw", Length: 8, Label: "DNS1", Description: "IPv4 numeric DNS address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: DNS2, Offset: 41, Type: typelabel.String, Access: "rw", Length: 8, Label: "DNS2", Description: "IPv4 numeric DNS address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: NTP1, Offset: 49, Type: typelabel.String, Access: "rw", Length: 12, Label: "NTP1", Description: "IPv4 numeric NTP address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: NTP2, Offset: 61, Type: typelabel.String, Access: "rw", Length: 12, Label: "NTP2", Description: "IPv4 numeric NTP address as a dotted string xxx.xxx.xxx.xxx"},
					smdx.PointElement{Id: DomNam, Offset: 73, Type: typelabel.String, Access: "rw", Length: 12, Label: "Domain", Description: "Domain name (24 chars max)"},
					smdx.PointElement{Id: HostNam, Offset: 85, Type: typelabel.String, Access: "rw", Length: 12, Label: "Host Name", Description: "Host name (24 chars max)"},
					smdx.PointElement{Id: Pad, Offset: 97, Type: typelabel.Pad},
				},
			},
		}})
}
