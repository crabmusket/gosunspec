// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model120

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block120 - Nameplate - Inverter Controls Nameplate Ratings

const (
	ModelID          = 120
	ModelLabel       = "Nameplate"
	ModelDescription = "Inverter Controls Nameplate Ratings "
)

const (
	ARtg            = "ARtg"
	ARtg_SF         = "ARtg_SF"
	AhrRtg          = "AhrRtg"
	AhrRtg_SF       = "AhrRtg_SF"
	DERTyp          = "DERTyp"
	MaxChaRte       = "MaxChaRte"
	MaxChaRte_SF    = "MaxChaRte_SF"
	MaxDisChaRte    = "MaxDisChaRte"
	MaxDisChaRte_SF = "MaxDisChaRte_SF"
	PFRtgQ1         = "PFRtgQ1"
	PFRtgQ2         = "PFRtgQ2"
	PFRtgQ3         = "PFRtgQ3"
	PFRtgQ4         = "PFRtgQ4"
	PFRtg_SF        = "PFRtg_SF"
	Pad             = "Pad"
	VARtg           = "VARtg"
	VARtg_SF        = "VARtg_SF"
	VArRtgQ1        = "VArRtgQ1"
	VArRtgQ2        = "VArRtgQ2"
	VArRtgQ3        = "VArRtgQ3"
	VArRtgQ4        = "VArRtgQ4"
	VArRtg_SF       = "VArRtg_SF"
	WHRtg           = "WHRtg"
	WHRtg_SF        = "WHRtg_SF"
	WRtg            = "WRtg"
	WRtg_SF         = "WRtg_SF"
)

type Block120 struct {
	DERTyp          sunspec.Enum16      `sunspec:"offset=0,len=1,access=r"`
	WRtg            uint16              `sunspec:"offset=1,len=1,sf=WRtg_SF,access=r"`
	WRtg_SF         sunspec.ScaleFactor `sunspec:"offset=2,len=1,access=r"`
	VARtg           uint16              `sunspec:"offset=3,len=1,sf=VARtg_SF,access=r"`
	VARtg_SF        sunspec.ScaleFactor `sunspec:"offset=4,len=1,access=r"`
	VArRtgQ1        int16               `sunspec:"offset=5,len=1,sf=VArRtg_SF,access=r"`
	VArRtgQ2        int16               `sunspec:"offset=6,len=1,sf=VArRtg_SF,access=r"`
	VArRtgQ3        int16               `sunspec:"offset=7,len=1,sf=VArRtg_SF,access=r"`
	VArRtgQ4        int16               `sunspec:"offset=8,len=1,sf=VArRtg_SF,access=r"`
	VArRtg_SF       sunspec.ScaleFactor `sunspec:"offset=9,len=1,access=r"`
	ARtg            uint16              `sunspec:"offset=10,len=1,sf=ARtg_SF,access=r"`
	ARtg_SF         sunspec.ScaleFactor `sunspec:"offset=11,len=1,access=r"`
	PFRtgQ1         int16               `sunspec:"offset=12,len=1,sf=PFRtg_SF,access=r"`
	PFRtgQ2         int16               `sunspec:"offset=13,len=1,sf=PFRtg_SF,access=r"`
	PFRtgQ3         int16               `sunspec:"offset=14,len=1,sf=PFRtg_SF,access=r"`
	PFRtgQ4         int16               `sunspec:"offset=15,len=1,sf=PFRtg_SF,access=r"`
	PFRtg_SF        sunspec.ScaleFactor `sunspec:"offset=16,len=1,access=r"`
	WHRtg           uint16              `sunspec:"offset=17,len=1,sf=WHRtg_SF,access=r"`
	WHRtg_SF        sunspec.ScaleFactor `sunspec:"offset=18,len=1,access=r"`
	AhrRtg          uint16              `sunspec:"offset=19,len=1,sf=AhrRtg_SF,access=r"`
	AhrRtg_SF       sunspec.ScaleFactor `sunspec:"offset=20,len=1,access=r"`
	MaxChaRte       uint16              `sunspec:"offset=21,len=1,sf=MaxChaRte_SF,access=r"`
	MaxChaRte_SF    sunspec.ScaleFactor `sunspec:"offset=22,len=1,access=r"`
	MaxDisChaRte    uint16              `sunspec:"offset=23,len=1,sf=MaxDisChaRte_SF,access=r"`
	MaxDisChaRte_SF sunspec.ScaleFactor `sunspec:"offset=24,len=1,access=r"`
	Pad             sunspec.Pad         `sunspec:"offset=25,len=1,access=r"`
}

func (self *Block120) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "nameplate",
		Length: 26,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 26,
				Type:   "fixed",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: DERTyp, Offset: 0, Type: typelabel.Enum16, Access: "r", Length: 1, Mandatory: true, Label: "DERTyp", Description: "Type of DER device. Default value is 4 to indicate PV device."},
					smdx.PointElement{Id: WRtg, Offset: 1, Type: typelabel.Uint16, ScaleFactor: "WRtg_SF", Units: "W", Access: "r", Length: 1, Mandatory: true, Label: "WRtg", Description: "Continuous power output capability of the inverter."},
					smdx.PointElement{Id: WRtg_SF, Offset: 2, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "WRtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: VARtg, Offset: 3, Type: typelabel.Uint16, ScaleFactor: "VARtg_SF", Units: "VA", Access: "r", Length: 1, Mandatory: true, Label: "VARtg", Description: "Continuous Volt-Ampere capability of the inverter."},
					smdx.PointElement{Id: VARtg_SF, Offset: 4, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "VARtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: VArRtgQ1, Offset: 5, Type: typelabel.Int16, ScaleFactor: "VArRtg_SF", Units: "var", Access: "r", Length: 1, Mandatory: true, Label: "VArRtgQ1", Description: "Continuous VAR capability of the inverter in quadrant 1."},
					smdx.PointElement{Id: VArRtgQ2, Offset: 6, Type: typelabel.Int16, ScaleFactor: "VArRtg_SF", Units: "var", Access: "r", Length: 1, Mandatory: true, Label: "VArRtgQ2", Description: "Continuous VAR capability of the inverter in quadrant 2."},
					smdx.PointElement{Id: VArRtgQ3, Offset: 7, Type: typelabel.Int16, ScaleFactor: "VArRtg_SF", Units: "var", Access: "r", Length: 1, Mandatory: true, Label: "VArRtgQ3", Description: "Continuous VAR capability of the inverter in quadrant 3."},
					smdx.PointElement{Id: VArRtgQ4, Offset: 8, Type: typelabel.Int16, ScaleFactor: "VArRtg_SF", Units: "var", Access: "r", Length: 1, Mandatory: true, Label: "VArRtgQ4", Description: "Continuous VAR capability of the inverter in quadrant 4."},
					smdx.PointElement{Id: VArRtg_SF, Offset: 9, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "VArRtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: ARtg, Offset: 10, Type: typelabel.Uint16, ScaleFactor: "ARtg_SF", Units: "A", Access: "r", Length: 1, Mandatory: true, Label: "ARtg", Description: "Maximum RMS AC current level capability of the inverter."},
					smdx.PointElement{Id: ARtg_SF, Offset: 11, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "ARtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: PFRtgQ1, Offset: 12, Type: typelabel.Int16, ScaleFactor: "PFRtg_SF", Units: "cos()", Access: "r", Length: 1, Mandatory: true, Label: "PFRtgQ1", Description: "Minimum power factor capability of the inverter in quadrant 1."},
					smdx.PointElement{Id: PFRtgQ2, Offset: 13, Type: typelabel.Int16, ScaleFactor: "PFRtg_SF", Units: "cos()", Access: "r", Length: 1, Mandatory: true, Label: "PFRtgQ2", Description: "Minimum power factor capability of the inverter in quadrant 2."},
					smdx.PointElement{Id: PFRtgQ3, Offset: 14, Type: typelabel.Int16, ScaleFactor: "PFRtg_SF", Units: "cos()", Access: "r", Length: 1, Mandatory: true, Label: "PFRtgQ3", Description: "Minimum power factor capability of the inverter in quadrant 3."},
					smdx.PointElement{Id: PFRtgQ4, Offset: 15, Type: typelabel.Int16, ScaleFactor: "PFRtg_SF", Units: "cos()", Access: "r", Length: 1, Mandatory: true, Label: "PFRtgQ4", Description: "Minimum power factor capability of the inverter in quadrant 4."},
					smdx.PointElement{Id: PFRtg_SF, Offset: 16, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "PFRtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: WHRtg, Offset: 17, Type: typelabel.Uint16, ScaleFactor: "WHRtg_SF", Units: "Wh", Access: "r", Length: 1, Label: "WHRtg", Description: "Nominal energy rating of storage device."},
					smdx.PointElement{Id: WHRtg_SF, Offset: 18, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "WHRtg_SF", Description: "Scale factor"},
					smdx.PointElement{Id: AhrRtg, Offset: 19, Type: typelabel.Uint16, ScaleFactor: "AhrRtg_SF", Units: "AH", Access: "r", Length: 1, Label: "AhrRtg", Description: "The useable capacity of the battery.  Maximum charge minus minimum charge from a technology capability perspective (Amp-hour capacity rating)."},
					smdx.PointElement{Id: AhrRtg_SF, Offset: 20, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "AhrRtg_SF", Description: "Scale factor for amp-hour rating."},
					smdx.PointElement{Id: MaxChaRte, Offset: 21, Type: typelabel.Uint16, ScaleFactor: "MaxChaRte_SF", Units: "W", Access: "r", Length: 1, Label: "MaxChaRte", Description: "Maximum rate of energy transfer into the storage device."},
					smdx.PointElement{Id: MaxChaRte_SF, Offset: 22, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "MaxChaRte_SF", Description: "Scale factor"},
					smdx.PointElement{Id: MaxDisChaRte, Offset: 23, Type: typelabel.Uint16, ScaleFactor: "MaxDisChaRte_SF", Units: "W", Access: "r", Length: 1, Label: "MaxDisChaRte", Description: "Maximum rate of energy transfer out of the storage device."},
					smdx.PointElement{Id: MaxDisChaRte_SF, Offset: 24, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "MaxDisChaRte_SF", Description: "Scale factor"},
					smdx.PointElement{Id: Pad, Offset: 25, Type: typelabel.Pad, Access: "r", Length: 1, Label: "Pad", Description: "Pad register."},
				},
			},
		}})
}
