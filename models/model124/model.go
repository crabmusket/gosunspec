// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model124

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block124 - Storage - Basic Storage Controls

const (
	ModelID          = 124
	ModelLabel       = "Storage"
	ModelDescription = "Basic Storage Controls "
)

const (
	ChaGriSet         = "ChaGriSet"
	ChaSt             = "ChaSt"
	ChaState          = "ChaState"
	ChaState_SF       = "ChaState_SF"
	InBatV            = "InBatV"
	InBatV_SF         = "InBatV_SF"
	InOutWRte_RmpTms  = "InOutWRte_RmpTms"
	InOutWRte_RvrtTms = "InOutWRte_RvrtTms"
	InOutWRte_SF      = "InOutWRte_SF"
	InOutWRte_WinTms  = "InOutWRte_WinTms"
	InWRte            = "InWRte"
	MinRsvPct         = "MinRsvPct"
	MinRsvPct_SF      = "MinRsvPct_SF"
	OutWRte           = "OutWRte"
	StorAval          = "StorAval"
	StorAval_SF       = "StorAval_SF"
	StorCtl_Mod       = "StorCtl_Mod"
	VAChaMax          = "VAChaMax"
	VAChaMax_SF       = "VAChaMax_SF"
	WChaDisChaGra_SF  = "WChaDisChaGra_SF"
	WChaGra           = "WChaGra"
	WChaMax           = "WChaMax"
	WChaMax_SF        = "WChaMax_SF"
	WDisChaGra        = "WDisChaGra"
)

type Block124 struct {
	WChaMax           uint16              `sunspec:"offset=0,len=1,sf=WChaMax_SF,access=rw"`
	WChaGra           uint16              `sunspec:"offset=1,len=1,sf=WChaDisChaGra_SF,access=rw"`
	WDisChaGra        uint16              `sunspec:"offset=2,len=1,sf=WChaDisChaGra_SF,access=rw"`
	StorCtl_Mod       sunspec.Bitfield16  `sunspec:"offset=3,len=1,access=rw"`
	VAChaMax          uint16              `sunspec:"offset=4,len=1,sf=VAChaMax_SF,access=rw"`
	MinRsvPct         uint16              `sunspec:"offset=5,len=1,sf=MinRsvPct_SF,access=rw"`
	ChaState          uint16              `sunspec:"offset=6,len=1,sf=ChaState_SF,access=r"`
	StorAval          uint16              `sunspec:"offset=7,len=1,sf=StorAval_SF,access=r"`
	InBatV            uint16              `sunspec:"offset=8,len=1,sf=InBatV_SF,access=r"`
	ChaSt             sunspec.Enum16      `sunspec:"offset=9,len=1,access=r"`
	OutWRte           int16               `sunspec:"offset=10,len=1,sf=InOutWRte_SF,access=rw"`
	InWRte            int16               `sunspec:"offset=11,len=1,sf=InOutWRte_SF,access=rw"`
	InOutWRte_WinTms  uint16              `sunspec:"offset=12,len=1,access=rw"`
	InOutWRte_RvrtTms uint16              `sunspec:"offset=13,len=1,access=rw"`
	InOutWRte_RmpTms  uint16              `sunspec:"offset=14,len=1,access=rw"`
	ChaGriSet         sunspec.Enum16      `sunspec:"offset=15,len=1,access=rw"`
	WChaMax_SF        sunspec.ScaleFactor `sunspec:"offset=16,len=1,access=r"`
	WChaDisChaGra_SF  sunspec.ScaleFactor `sunspec:"offset=17,len=1,access=r"`
	VAChaMax_SF       sunspec.ScaleFactor `sunspec:"offset=18,len=1,access=r"`
	MinRsvPct_SF      sunspec.ScaleFactor `sunspec:"offset=19,len=1,access=r"`
	ChaState_SF       sunspec.ScaleFactor `sunspec:"offset=20,len=1,access=r"`
	StorAval_SF       sunspec.ScaleFactor `sunspec:"offset=21,len=1,access=r"`
	InBatV_SF         sunspec.ScaleFactor `sunspec:"offset=22,len=1,access=r"`
	InOutWRte_SF      sunspec.ScaleFactor `sunspec:"offset=23,len=1,access=r"`
}

func (self *Block124) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "storage",
		Length: 24,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 24,
				Type:   "fixed",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: WChaMax, Offset: 0, Type: typelabel.Uint16, ScaleFactor: "WChaMax_SF", Units: "W", Access: "rw", Length: 1, Mandatory: true, Label: "WChaMax", Description: "Setpoint for maximum charge."},
					smdx.PointElement{Id: WChaGra, Offset: 1, Type: typelabel.Uint16, ScaleFactor: "WChaDisChaGra_SF", Units: "% WChaMax/sec", Access: "rw", Length: 1, Mandatory: true, Label: "WChaGra", Description: "Setpoint for maximum charging rate. Default is MaxChaRte."},
					smdx.PointElement{Id: WDisChaGra, Offset: 2, Type: typelabel.Uint16, ScaleFactor: "WChaDisChaGra_SF", Units: "% WChaMax/sec", Access: "rw", Length: 1, Mandatory: true, Label: "WDisChaGra", Description: "Setpoint for maximum discharge rate. Default is MaxDisChaRte."},
					smdx.PointElement{Id: StorCtl_Mod, Offset: 3, Type: typelabel.Bitfield16, Access: "rw", Length: 1, Mandatory: true, Label: "StorCtl_Mod", Description: "Activate hold/discharge/charge storage control mode. Bitfield value."},
					smdx.PointElement{Id: VAChaMax, Offset: 4, Type: typelabel.Uint16, ScaleFactor: "VAChaMax_SF", Units: "VA", Access: "rw", Length: 1, Label: "VAChaMax", Description: "Setpoint for maximum charging VA."},
					smdx.PointElement{Id: MinRsvPct, Offset: 5, Type: typelabel.Uint16, ScaleFactor: "MinRsvPct_SF", Units: "% WChaMax", Access: "rw", Length: 1, Label: "MinRsvPct", Description: "Setpoint for minimum reserve for storage as a percentage of the nominal maximum storage."},
					smdx.PointElement{Id: ChaState, Offset: 6, Type: typelabel.Uint16, ScaleFactor: "ChaState_SF", Units: "% AhrRtg", Access: "r", Length: 1, Label: "ChaState", Description: "Currently available energy as a percent of the capacity rating."},
					smdx.PointElement{Id: StorAval, Offset: 7, Type: typelabel.Uint16, ScaleFactor: "StorAval_SF", Units: "AH", Access: "r", Length: 1, Label: "StorAval", Description: "State of charge (ChaState) minus storage reserve (MinRsvPct) times capacity rating (AhrRtg)."},
					smdx.PointElement{Id: InBatV, Offset: 8, Type: typelabel.Uint16, ScaleFactor: "InBatV_SF", Units: "V", Access: "r", Length: 1, Label: "InBatV", Description: "Internal battery voltage."},
					smdx.PointElement{Id: ChaSt, Offset: 9, Type: typelabel.Enum16, Access: "r", Length: 1, Label: "ChaSt", Description: "Charge status of storage device. Enumerated value."},
					smdx.PointElement{Id: OutWRte, Offset: 10, Type: typelabel.Int16, ScaleFactor: "InOutWRte_SF", Units: "% WDisChaMax", Access: "rw", Length: 1, Label: "OutWRte", Description: "Percent of max discharge rate."},
					smdx.PointElement{Id: InWRte, Offset: 11, Type: typelabel.Int16, ScaleFactor: "InOutWRte_SF", Units: " % WChaMax", Access: "rw", Length: 1, Label: "InWRte", Description: "Percent of max charging rate."},
					smdx.PointElement{Id: InOutWRte_WinTms, Offset: 12, Type: typelabel.Uint16, Units: "Secs", Access: "rw", Length: 1, Label: "InOutWRte_WinTms", Description: "Time window for charge/discharge rate change."},
					smdx.PointElement{Id: InOutWRte_RvrtTms, Offset: 13, Type: typelabel.Uint16, Units: "Secs", Access: "rw", Length: 1, Label: "InOutWRte_RvrtTms", Description: "Timeout period for charge/discharge rate."},
					smdx.PointElement{Id: InOutWRte_RmpTms, Offset: 14, Type: typelabel.Uint16, Units: "Secs", Access: "rw", Length: 1, Label: "InOutWRte_RmpTms", Description: "Ramp time for moving from current setpoint to new setpoint."},
					smdx.PointElement{Id: ChaGriSet, Offset: 15, Type: typelabel.Enum16, Access: "rw", Length: 1},
					smdx.PointElement{Id: WChaMax_SF, Offset: 16, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "WChaMax_SF", Description: "Scale factor for maximum charge."},
					smdx.PointElement{Id: WChaDisChaGra_SF, Offset: 17, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "WChaDisChaGra_SF", Description: "Scale factor for maximum charge and discharge rate."},
					smdx.PointElement{Id: VAChaMax_SF, Offset: 18, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "VAChaMax_SF", Description: "Scale factor for maximum charging VA."},
					smdx.PointElement{Id: MinRsvPct_SF, Offset: 19, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "MinRsvPct_SF", Description: "Scale factor for minimum reserve percentage."},
					smdx.PointElement{Id: ChaState_SF, Offset: 20, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "ChaState_SF", Description: "Scale factor for available energy percent."},
					smdx.PointElement{Id: StorAval_SF, Offset: 21, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "StorAval_SF", Description: "Scale factor for state of charge."},
					smdx.PointElement{Id: InBatV_SF, Offset: 22, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "InBatV_SF", Description: "Scale factor for battery voltage."},
					smdx.PointElement{Id: InOutWRte_SF, Offset: 23, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "InOutWRte_SF", Description: "Scale factor for percent charge/discharge rate."},
				},
			},
		}})
}
