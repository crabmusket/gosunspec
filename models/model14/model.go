// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model14

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block14 - Proxy Server - Include this block to allow for a proxy server

const (
	ModelID          = 14
	ModelLabel       = "Proxy Server"
	ModelDescription = "Include this block to allow for a proxy server"
)

const (
	Addr = "Addr"
	Cap  = "Cap"
	Cfg  = "Cfg"
	Nam  = "Nam"
	Port = "Port"
	Pw   = "Pw"
	Typ  = "Typ"
	User = "User"
)

type Block14 struct {
	Nam  string             `sunspec:"offset=0,len=4,access=rw"`
	Cap  sunspec.Bitfield16 `sunspec:"offset=4,access=rw"`
	Cfg  sunspec.Enum16     `sunspec:"offset=5,access=rw"`
	Typ  sunspec.Bitfield16 `sunspec:"offset=6,access=rw"`
	Addr string             `sunspec:"offset=7,len=20,access=rw"`
	Port uint16             `sunspec:"offset=27,access=rw"`
	User string             `sunspec:"offset=28,len=12,access=rw"`
	Pw   string             `sunspec:"offset=40,len=12,access=rw"`
}

func (self *Block14) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 52,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 52,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Nam, Offset: 0, Type: typelabel.String, Access: "rw", Length: 4, Label: "name", Description: "Interface name (8 chars)"},
					smdx.PointElement{Id: Cap, Offset: 4, Type: typelabel.Bitfield16, Access: "rw", Mandatory: true, Label: "Capabilities", Description: "Bitmask value.  Proxy configuration capabilities"},
					smdx.PointElement{Id: Cfg, Offset: 5, Type: typelabel.Enum16, Access: "rw", Mandatory: true, Label: "Config", Description: "Enumerated value.  Set proxy address type"},
					smdx.PointElement{Id: Typ, Offset: 6, Type: typelabel.Bitfield16, Access: "rw", Mandatory: true, Label: "Type", Description: "Enumerate value.  Proxy server type"},
					smdx.PointElement{Id: Addr, Offset: 7, Type: typelabel.String, Access: "rw", Length: 20, Mandatory: true, Label: "Address", Description: "IPv4 or IPv6 proxy hostname or dotted address (40 chars)"},
					smdx.PointElement{Id: Port, Offset: 27, Type: typelabel.Uint16, Access: "rw", Mandatory: true, Label: "Port", Description: "Proxy port number"},
					smdx.PointElement{Id: User, Offset: 28, Type: typelabel.String, Access: "rw", Length: 12, Label: "Username", Description: "Proxy user name"},
					smdx.PointElement{Id: Pw, Offset: 40, Type: typelabel.String, Access: "rw", Length: 12, Label: "Password", Description: "Proxy password"},
				},
			},
		}})
}
