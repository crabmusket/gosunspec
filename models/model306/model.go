// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model306

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block306 - Reference Point Model - Include to support a standard reference point

const (
	ModelID          = 306
	ModelLabel       = "Reference Point Model"
	ModelDescription = "Include to support a standard reference point"
)

const (
	A   = "A"
	GHI = "GHI"
	Tmp = "Tmp"
	V   = "V"
)

type Block306 struct {
	GHI uint16 `sunspec:"offset=0"`
	A   uint16 `sunspec:"offset=1"`
	V   uint16 `sunspec:"offset=2"`
	Tmp uint16 `sunspec:"offset=3"`
}

func (self *Block306) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "ref_point",
		Length: 4,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 4,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: GHI, Offset: 0, Type: typelabel.Uint16, Units: "W/m2", Label: "GHI", Description: "Global Horizontal Irradiance"},
					smdx.PointElement{Id: A, Offset: 1, Type: typelabel.Uint16, Units: "W/m2", Label: "Amps", Description: "Current measurement at reference point"},
					smdx.PointElement{Id: V, Offset: 2, Type: typelabel.Uint16, Units: "W/m2", Label: "Voltage", Description: "Voltage  measurement at reference point"},
					smdx.PointElement{Id: Tmp, Offset: 3, Type: typelabel.Uint16, Units: "W/m2", Label: "Temperature", Description: "Temperature measurement at reference point"},
				},
			},
		}})
}
