// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model4

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block4 - Secure Dataset Read Response - Compute a digital signature over a specified set of data registers

const (
	ModelID = 4
)

const (
	Alg   = "Alg"
	Alm   = "Alm"
	DS    = "DS"
	Ms    = "Ms"
	N     = "N"
	RqSeq = "RqSeq"
	Seq   = "Seq"
	Sts   = "Sts"
	Ts    = "Ts"
	Val1  = "Val1"
	Val10 = "Val10"
	Val11 = "Val11"
	Val12 = "Val12"
	Val13 = "Val13"
	Val14 = "Val14"
	Val15 = "Val15"
	Val16 = "Val16"
	Val17 = "Val17"
	Val18 = "Val18"
	Val19 = "Val19"
	Val2  = "Val2"
	Val20 = "Val20"
	Val21 = "Val21"
	Val22 = "Val22"
	Val23 = "Val23"
	Val24 = "Val24"
	Val25 = "Val25"
	Val26 = "Val26"
	Val27 = "Val27"
	Val28 = "Val28"
	Val29 = "Val29"
	Val3  = "Val3"
	Val30 = "Val30"
	Val31 = "Val31"
	Val32 = "Val32"
	Val33 = "Val33"
	Val34 = "Val34"
	Val35 = "Val35"
	Val36 = "Val36"
	Val37 = "Val37"
	Val38 = "Val38"
	Val39 = "Val39"
	Val4  = "Val4"
	Val40 = "Val40"
	Val41 = "Val41"
	Val42 = "Val42"
	Val43 = "Val43"
	Val44 = "Val44"
	Val45 = "Val45"
	Val46 = "Val46"
	Val47 = "Val47"
	Val48 = "Val48"
	Val49 = "Val49"
	Val5  = "Val5"
	Val50 = "Val50"
	Val6  = "Val6"
	Val7  = "Val7"
	Val8  = "Val8"
	Val9  = "Val9"
	X     = "X"
)

type Block4Repeat struct {
	DS uint16 `sunspec:"offset=0,access=r"`
}

type Block4 struct {
	RqSeq uint16         `sunspec:"offset=0,access=r"`
	Sts   sunspec.Enum16 `sunspec:"offset=1,access=r"`
	X     uint16         `sunspec:"offset=2,access=r"`
	Val1  uint16         `sunspec:"offset=3,access=r"`
	Val2  uint16         `sunspec:"offset=4,access=r"`
	Val3  uint16         `sunspec:"offset=5,access=r"`
	Val4  uint16         `sunspec:"offset=6,access=r"`
	Val5  uint16         `sunspec:"offset=7,access=r"`
	Val6  uint16         `sunspec:"offset=8,access=r"`
	Val7  uint16         `sunspec:"offset=9,access=r"`
	Val8  uint16         `sunspec:"offset=10,access=r"`
	Val9  uint16         `sunspec:"offset=11,access=r"`
	Val10 uint16         `sunspec:"offset=12,access=r"`
	Val11 uint16         `sunspec:"offset=13,access=r"`
	Val12 uint16         `sunspec:"offset=14,access=r"`
	Val13 uint16         `sunspec:"offset=15,access=r"`
	Val14 uint16         `sunspec:"offset=16,access=r"`
	Val15 uint16         `sunspec:"offset=17,access=r"`
	Val16 uint16         `sunspec:"offset=18,access=r"`
	Val17 uint16         `sunspec:"offset=19,access=r"`
	Val18 uint16         `sunspec:"offset=20,access=r"`
	Val19 uint16         `sunspec:"offset=21,access=r"`
	Val20 uint16         `sunspec:"offset=22,access=r"`
	Val21 uint16         `sunspec:"offset=23,access=r"`
	Val22 uint16         `sunspec:"offset=24,access=r"`
	Val23 uint16         `sunspec:"offset=25,access=r"`
	Val24 uint16         `sunspec:"offset=26,access=r"`
	Val25 uint16         `sunspec:"offset=27,access=r"`
	Val26 uint16         `sunspec:"offset=28,access=r"`
	Val27 uint16         `sunspec:"offset=29,access=r"`
	Val28 uint16         `sunspec:"offset=30,access=r"`
	Val29 uint16         `sunspec:"offset=31,access=r"`
	Val30 uint16         `sunspec:"offset=32,access=r"`
	Val31 uint16         `sunspec:"offset=33,access=r"`
	Val32 uint16         `sunspec:"offset=34,access=r"`
	Val33 uint16         `sunspec:"offset=35,access=r"`
	Val34 uint16         `sunspec:"offset=36,access=r"`
	Val35 uint16         `sunspec:"offset=37,access=r"`
	Val36 uint16         `sunspec:"offset=38,access=r"`
	Val37 uint16         `sunspec:"offset=39,access=r"`
	Val38 uint16         `sunspec:"offset=40,access=r"`
	Val39 uint16         `sunspec:"offset=41,access=r"`
	Val40 uint16         `sunspec:"offset=42,access=r"`
	Val41 uint16         `sunspec:"offset=43,access=r"`
	Val42 uint16         `sunspec:"offset=44,access=r"`
	Val43 uint16         `sunspec:"offset=45,access=r"`
	Val44 uint16         `sunspec:"offset=46,access=r"`
	Val45 uint16         `sunspec:"offset=47,access=r"`
	Val46 uint16         `sunspec:"offset=48,access=r"`
	Val47 uint16         `sunspec:"offset=49,access=r"`
	Val48 uint16         `sunspec:"offset=50,access=r"`
	Val49 uint16         `sunspec:"offset=51,access=r"`
	Val50 uint16         `sunspec:"offset=52,access=r"`
	Ts    uint32         `sunspec:"offset=53,access=r"`
	Ms    uint16         `sunspec:"offset=55,access=r"`
	Seq   uint16         `sunspec:"offset=56,access=r"`
	Alm   sunspec.Enum16 `sunspec:"offset=57"`
	Alg   sunspec.Enum16 `sunspec:"offset=58,access=r"`
	N     uint16         `sunspec:"offset=59,access=r"`

	Repeats []Block4Repeat
}

func (self *Block4) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 61,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 60,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: RqSeq, Offset: 0, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Sts, Offset: 1, Type: typelabel.Enum16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: X, Offset: 2, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val1, Offset: 3, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val2, Offset: 4, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val3, Offset: 5, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val4, Offset: 6, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val5, Offset: 7, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val6, Offset: 8, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val7, Offset: 9, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val8, Offset: 10, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val9, Offset: 11, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val10, Offset: 12, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val11, Offset: 13, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val12, Offset: 14, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val13, Offset: 15, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val14, Offset: 16, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val15, Offset: 17, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val16, Offset: 18, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val17, Offset: 19, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val18, Offset: 20, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val19, Offset: 21, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val20, Offset: 22, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val21, Offset: 23, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val22, Offset: 24, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val23, Offset: 25, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val24, Offset: 26, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val25, Offset: 27, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val26, Offset: 28, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val27, Offset: 29, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val28, Offset: 30, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val29, Offset: 31, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val30, Offset: 32, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val31, Offset: 33, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val32, Offset: 34, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val33, Offset: 35, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val34, Offset: 36, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val35, Offset: 37, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val36, Offset: 38, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val37, Offset: 39, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val38, Offset: 40, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val39, Offset: 41, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val40, Offset: 42, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val41, Offset: 43, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val42, Offset: 44, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val43, Offset: 45, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val44, Offset: 46, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val45, Offset: 47, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val46, Offset: 48, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val47, Offset: 49, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val48, Offset: 50, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val49, Offset: 51, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Val50, Offset: 52, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Ts, Offset: 53, Type: typelabel.Uint32, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Ms, Offset: 55, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Seq, Offset: 56, Type: typelabel.Uint16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: Alm, Offset: 57, Type: typelabel.Enum16, Mandatory: true},
					smdx.PointElement{Id: Alg, Offset: 58, Type: typelabel.Enum16, Access: "r", Mandatory: true},
					smdx.PointElement{Id: N, Offset: 59, Type: typelabel.Uint16, Access: "r", Mandatory: true},
				},
			},
			smdx.BlockElement{
				Length: 1,
				Type:   "repeating",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: DS, Offset: 0, Type: typelabel.Uint16, Access: "r", Mandatory: true},
				},
			},
		}})
}
