// NOTICE
// This file was automatically generated by ../../generators/models.go. Do not edit it!
// You can regenerate it by running 'go generate ./models' from the directory above.

package model64101

import (
	"github.com/crabmusket/gosunspec"
	"github.com/crabmusket/gosunspec/smdx"
	"github.com/crabmusket/gosunspec/typelabel"
)

// Block64101 - Eltek Inverter Extension -

const (
	ModelID          = 64101
	ModelLabel       = "Eltek Inverter Extension"
	ModelDescription = ""
)

const (
	Eltek_APD_Method     = "Eltek_APD_Method"
	Eltek_APD_Power_Ref  = "Eltek_APD_Power_Ref"
	Eltek_Country_Code   = "Eltek_Country_Code"
	Eltek_Feeding_Phase  = "Eltek_Feeding_Phase"
	Eltek_RPS_CosPhi_Ref = "Eltek_RPS_CosPhi_Ref"
	Eltek_RPS_Method     = "Eltek_RPS_Method"
	Eltek_RPS_Q_Ref      = "Eltek_RPS_Q_Ref"
)

type Block64101 struct {
	Eltek_Country_Code   uint16 `sunspec:"offset=0"`
	Eltek_Feeding_Phase  uint16 `sunspec:"offset=1"`
	Eltek_APD_Method     uint16 `sunspec:"offset=2"`
	Eltek_APD_Power_Ref  uint16 `sunspec:"offset=3"`
	Eltek_RPS_Method     uint16 `sunspec:"offset=4"`
	Eltek_RPS_Q_Ref      uint16 `sunspec:"offset=5"`
	Eltek_RPS_CosPhi_Ref int16  `sunspec:"offset=6"`
}

func (self *Block64101) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 7,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 7,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Eltek_Country_Code, Offset: 0, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_Feeding_Phase, Offset: 1, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_APD_Method, Offset: 2, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_APD_Power_Ref, Offset: 3, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_RPS_Method, Offset: 4, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_RPS_Q_Ref, Offset: 5, Type: typelabel.Uint16},
					smdx.PointElement{Id: Eltek_RPS_CosPhi_Ref, Offset: 6, Type: typelabel.Int16},
				},
			},
		}})
}
